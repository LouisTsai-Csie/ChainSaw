[build-system]
requires = ["setuptools>=78.0.2"]
build-backend = "setuptools.build_meta"

[project]
name = "chainsaw"
description = "ChainSaw: the EVM disassembler where raw opcodes meet the blade"
readme = "README.md"
requires-python = ">=3.11"
dynamic = ["version"]
license = {text = "MIT"}
dependencies = []

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pre-commit>=3.0.0",
    "codespell>=2.2.0",
    "bump2version>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/caijiacheng/ChainSaw"
Repository = "https://github.com/caijiacheng/ChainSaw"

[project.scripts]
chainsaw = "chainsaw.main:main"

[tool.setuptools.dynamic]
version = {attr = "chainsaw.__version__"}

[tool.ruff]
line-length = 99
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "W",  # pycodestyle warnings
    "I",  # isort
    "A",  # flake8-builtins
    "N",  # pep8-naming
    "D",  # pydocstyle
    "C",  # flake8-comprehensions
]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in __init__
    "D200",  # One-line docstring should fit on one line with quotes
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D404",  # First word of the docstring should not be "This"
    "D415",  # First line should end with a period, question mark, or exclamation point
    "C901",  # too complex
]
fixable = ["I", "B", "E", "F", "W", "D", "C"]

[tool.ruff.per-file-ignores]
"tests/*" = ["D"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_untyped_defs = false
plugins = ["pydantic.mypy"]
exclude = [
    "venv",
    ".venv",
    "env",
    ".env",
    "node_modules",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
    "__pycache__",
]

[[tool.mypy.overrides]]
module = ["*"]
ignore_missing_imports = true

[tool.codespell]
skip = '*.git,*.tox,*.env,*.venv,*venv*,*.mypy_cache,*.pytest_cache'

[tool.pytest.ini_options]
addopts = "-v"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
